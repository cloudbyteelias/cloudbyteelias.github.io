<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Trabalhando com macros parte 1 [Linguagem C]</title>
      <link href="2021/02/17/MacrosC/"/>
      <url>2021/02/17/MacrosC/</url>
      
        <content type="html"><![CDATA[<h2 id="Sobre-macros"><a href="#Sobre-macros" class="headerlink" title="Sobre macros"></a>Sobre macros</h2><article>Macros são muito úteis, mas como qualquer coisa deve ser usada corretamente, alguns padrões são utilizados na hora da sua declaração como sempre usar letras maiúsculas, uma ideia não muito legal é usar macros para declaração de tipos.</article><p>Exemplo a não ser seguido:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">version</span> <span class="token string">"1.1.0"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">UINT</span> <span class="token expression"><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span></span></span>UINT t<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Alternativa:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">VERSION</span> <span class="token string">"1.1.0"</span></span><span class="token keyword">typedef</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> UINT<span class="token punctuation">;</span>UINT t<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><article>Como podemos ver macros são definidos por #define,na fase de pré-processamento o valor descrito em #defineé trocado pela sua nomenclatura ou seja em #define VERSION "1.10" representando,"1.10" como VERSION issoefetuado por uma etapa denominada expansão de macro.</article><h2 id="Praticando-um-pouco"><a href="#Praticando-um-pouco" class="headerlink" title="Praticando um pouco:"></a>Praticando um pouco:</h2><p>Exemplo simples executando operações básicas:</p><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &lt;stdlib.h&gt;#include &lt;stdio.h&gt;#define ADD(x,y) x + y#define SUB(x,y) x - y#define MUL(x,y) x * y#define DIV(x,y) x &#x2F; yint main(int argc, char const *argv[])&#123;        printf (&quot;[%d] [%d] [%d] [%d]\n&quot;,ADD(5,5),SUB(10,5),MUL(5,5),DIV(10,2));         return EXIT_SUCCESS;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Sua saida será:</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[10] [5] [25] [5]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><article>Exemplo mostra a execução de uma macro variada ou variadic macro, o mesmo pode ter N, argumentos, este recurso é extremamente útil.Observe o próximo exemplo:</article><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;stdlib.h&gt;#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define VERSION     &quot;0.1&quot;#define NET_ERROR   &quot;Sem internet&quot;#define AUTH_ERROR  &quot;Erro de autenticação&quot;#define LOG_ERROR(log, ...) \ fprintf(stderr, log, __VA_ARGS__)int main(int argc, char const *argv[])&#123;    int x &#x3D; 5;    if(x &lt;&#x3D; 5)&#123;        LOG_ERROR(&quot;NÂO SUPORTADO [%s]\n&quot;, NET_ERROR);    &#125;    return EXIT_SUCCESS;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><article>Bacana não é? Estamos passando uma macro variada buscando outra macro com erros pré definidos, ou seja, se a condiçãonão satisfazer o macro LOG_ERROR apresentara a mensagem de escolha identificada pelo macro NET_ERROR, imagineque ocorreu um erro de conexão e essa mensagem é responsável por apresentar para o usuário a situação atual, graças a nossa__VA_ARGS__ que é a responsável por adquirir nossa segunda macro como parâmetro.</article><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais:"></a>Considerações finais:</h2><article>Obrigado por chegar até aqui,faça bom proveito do conteúdo. Agora fique com a foto de um gato fofo.</article><h2 id="Codigo-Fonte"><a href="#Codigo-Fonte" class="headerlink" title="Código Fonte:"></a>Código Fonte:</h2><p><a href="https://github.com/cloudbyteelias/Kernel-Panic-Sources/tree/main/C/Macros">https://github.com/cloudbyteelias/Kernel-Panic-Sources/tree/main/C/Macros</a></p><p><img src="https://i.pinimg.com/originals/84/48/c8/8448c8666642b94395a81945bf2af015.jpg" alt="alt text" title="Title"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linguagem C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>welcome Jedi !</title>
      <link href="2021/02/06/welcome-Jedi!/"/>
      <url>2021/02/06/welcome-Jedi!/</url>
      
        <content type="html"><![CDATA[<!-- ABOUT THE PROJECT --><h2 id="About-The-Project"><a href="#About-The-Project" class="headerlink" title="About The Project"></a>About The Project</h2><p>There are many great README templates available on GitHub, however, I didn’t find one that really suit my needs so I created this enhanced one. I want to create a README template so amazing that it’ll be the last one you ever need – I think this is it.</p><p>Here’s why:</p><ul><li>Your time should be focused on creating something amazing. A project that solves a problem and helps others</li><li>You shouldn’t be doing the same tasks over and over like creating a README from scratch</li><li>You should element DRY principles to the rest of your life :smile:</li></ul><p>Of course, no one template will serve all projects since your needs may be different. So I’ll be adding more in the near future. You may also suggest changes by forking this repo and creating a pull request or opening an issue. Thanks to all the people have have contributed to expanding this template!</p><p>A list of commonly used resources that I find helpful are listed in the acknowledgements.</p><h3 id="Built-With"><a href="#Built-With" class="headerlink" title="Built With"></a>Built With</h3><p>This section should list any major frameworks that you built your project using. Leave any add-ons/plugins for the acknowledgements section. Here are a few examples.</p><ul><li><a href="https://getbootstrap.com/">Bootstrap</a></li><li><a href="https://jquery.com/">JQuery</a></li><li><a href="https://laravel.com/">Laravel</a></li></ul><!-- GETTING STARTED --><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>This is an example of how you may give instructions on setting up your project locally.<br>To get a local copy up and running follow these simple example steps.</p><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h3><p>This is an example of how to list things you need to use the software and how to install them.</p><ul><li>npm<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">npm install npm@latest -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3></li></ul><ol><li>Get a free API Key at <a href="https://example.com/">https://example.com</a></li><li>Clone the repo<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">git clone https:&#x2F;&#x2F;github.com&#x2F;your_username_&#x2F;Project-Name.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>Install NPM packages<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>Enter your API in <code>config.js</code><pre class="line-numbers language-JS" data-language="JS"><code class="language-JS">const API_KEY &#x3D; &#39;ENTER YOUR API&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><!-- USAGE EXAMPLES --><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>Use this space to show useful examples of how a project can be used. Additional screenshots, code examples and demos work well in this space. You may also link to more resources.</p><p><em>For more examples, please refer to the <a href="https://example.com/">Documentation</a></em></p><!-- ROADMAP --><h2 id="Roadmap"><a href="#Roadmap" class="headerlink" title="Roadmap"></a>Roadmap</h2><p>See the <a href="https://github.com/othneildrew/Best-README-Template/issues">open issues</a> for a list of proposed features (and known issues).</p><!-- CONTRIBUTING --><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are <strong>greatly appreciated</strong>.</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;iomanip&gt;#include &lt;cmath&gt;using namespace std;int main(int argc, char const *argv[])&#123;        size_t max&#123;&#125;;    cout &lt;&lt; &quot;Numero de primos a serem calculados?&quot; ;    cout &lt;&lt; endl;    cin &gt;&gt; max;    if (max &#x3D;&#x3D; 0)&#123;        cout &lt;&lt; &quot;Error&quot;;        return EXIT_FAILURE;    &#125;    auto* primes &#123;new unsigned [max]&#125;;    size_t count &#123;1&#125;;    primes[0] &#x3D; 2;    unsigned trial &#123;3&#125;;    while(count &lt; max)&#123;        bool isprime&#123;true&#125;;        const auto limit &#x3D; static_cast&lt;unsigned&gt;(sqrt(trial));        for(size_t i&#123;&#125;; primes[i] &lt;&#x3D; limit &amp;&amp; isprime; ++i)&#123;                isprime &#x3D; trial % primes[i] &gt; 0;        &#125;        if(isprime)&#123;            primes[count ++] &#x3D; trial;            trial +&#x3D; 2;        &#125;        &#x2F;&#x2F;output        for(size_t i &#123;&#125;; i &lt; max; i++)&#123;            cout &lt;&lt; setw(10) &lt;&lt; primes[i];            if((i+1) % 10 &#x3D;&#x3D; 0)&#123;                cout &lt;&lt; endl;            &#125;        &#125;        &#x2F;&#x2F;cout &lt;&lt; endl;        delete[] primes; &#x2F;&#x2F; free memory array        &#x2F;&#x2F;primes &#x3D; nullptr; &#x2F;&#x2F; reset no ponteiro        &#125;    return EXIT_SUCCESS;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Post test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
